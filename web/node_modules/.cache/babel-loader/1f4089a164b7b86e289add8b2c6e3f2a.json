{"ast":null,"code":"import _slicedToArray from \"c:\\\\Alef\\\\FindDev\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Alef\\\\FindDev\\\\web\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; //componente = função que retorna qualquer conteudo \n//estado =  atributo para componentes (ex.: title) )( informações que um componente \n//pai passa para o filho\n//propriedade = informação que o componente vai manipular\n\nfunction App() {\n  //componente pai\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  function incrementCounter() {\n    counter++;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" Contador: \", counter), React.createElement(\"button\", {\n    onClick: incrementCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Incrementar\")) //componentes filho\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["c:/Alef/FindDev/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementCounter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B,C,CAEA;AACA;AACA;AACA;;AAIA,SAASC,GAAT,GAAc;AAAE;AAAF,oBACkBD,QAAQ,CAAC,CAAD,CAD1B;AAAA;AAAA,QACLE,OADK;AAAA,QACIC,UADJ;;AAGZ,WAASC,gBAAT,GAA2B;AACzBF,IAAAA,OAAO;AACR;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBA,OAAhB,CADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF,CAIM;AAJN;AAMD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState} from 'react';\n\n//componente = função que retorna qualquer conteudo \n//estado =  atributo para componentes (ex.: title) )( informações que um componente \n//pai passa para o filho\n//propriedade = informação que o componente vai manipular\n\n\n\nfunction App(){ //componente pai\n  const [counter, setCounter] = useState(0);\n\n  function incrementCounter(){\n    counter ++;\n  }\n\n  return(\n    <>\n      <h1> Contador: {counter}</h1>\n      <button onClick={incrementCounter} >Incrementar</button>\n    </> //componentes filho\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}